#!/bin/bash
# –ó–∞–º–µ–Ω–∞ –º–µ—Ç–æ–¥–∞ create_lobby –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é

cat > /tmp/new_create_lobby.py << 'ENDOFFILE'
    def create_lobby(self, lobby_name: str, password: str, server: str, mode: str) -> Optional[dict]:
        try:
            logger.info(f"[{self.username}] üéÆ –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–±–±–∏: {lobby_name}")
            
            server_region = self._get_server_region(server)
            game_mode = self._get_game_mode(mode)
            
            # –°–æ–∑–¥–∞—ë–º –ë–ï–ó –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            self.dota.create_practice_lobby()
            
            if self.lobby_created_event.wait(timeout=30):
                # –°–†–ê–ó–£ –≤—ã—Ö–æ–¥–∏–º –∏–∑ –∫–æ–º–∞–Ω–¥—ã (–æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Å–ª–æ—Ç)
                try:
                    self.dota.practice_lobby_kick_from_team(self.steam.steam_id.as_32)
                    logger.info(f"[{self.username}] ‚¨ÖÔ∏è –í—ã—à–µ–ª –∏–∑ –∫–æ–º–∞–Ω–¥—ã")
                    time.sleep(0.5)
                except Exception as e:
                    logger.warning(f"[{self.username}] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –∏–∑ –∫–æ–º–∞–Ω–¥—ã: {e}")
                
                # –°–†–ê–ó–£ –∏–¥—ë–º –≤ –∫–∞–Ω–∞–ª —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ (–ù–ï –∑–∞–Ω–∏–º–∞–µ–º —Å–ª–æ—Ç –∏–≥—Ä–æ–∫–∞!)
                try:
                    self.dota.join_practice_lobby_broadcast_channel(channel=1)
                    logger.info(f"[{self.username}] üì∫ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–∞–Ω–∞–ª—É —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏")
                    time.sleep(0.5)
                except Exception as e:
                    logger.warning(f"[{self.username}] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏: {e}")
                
                # –¢–ï–ü–ï–†–¨ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º (–≤–∫–ª—é—á–∞—è —Ç—É—Ä–Ω–∏—Ä)
                options = {
                    'game_name': lobby_name,
                    'pass_key': password,
                    'server_region': server_region,
                    'game_mode': game_mode,
                    'selection_priority_rules': 1,
                    'allow_spectating': False,
                    'allow_cheats': False,
                    'fill_with_bots': False,
                    'tournament_game': True,
                    'leagueid': 18390,
                }
                
                self.dota.config_practice_lobby(options=options)
                logger.info(f"[{self.username}] ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
                time.sleep(2)
                
                logger.info(f"[{self.username}] ‚úÖ –õ–æ–±–±–∏ —Å–æ–∑–¥–∞–Ω–æ!")
                
                lobby_info = {
                    'lobby_name': lobby_name,
                    'password': password,
                    'account': self.username,
                    'server': server,
                    'mode': mode
                }
                return lobby_info
            else:
                logger.error(f"[{self.username}] ‚ùå –¢–∞–π–º–∞—É—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–±–±–∏")
                return None
        except Exception as e:
            logger.error(f"[{self.username}] ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–±–±–∏: {e}", exc_info=True)
            return None
ENDOFFILE

echo "‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: /tmp/new_create_lobby.py"
echo ""
echo "–¢–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "cd ~/dota2_lobby_bot"
echo "python3 << 'ENDPYTHON'"
echo "import re"
echo ""
echo "with open('dota2_real_lobby_bot_v2.py', 'r', encoding='utf-8') as f:"
echo "    content = f.read()"
echo ""
echo "with open('/tmp/new_create_lobby.py', 'r', encoding='utf-8') as f:"
echo "    new_method = f.read()"
echo ""
echo "# –ó–∞–º–µ–Ω—è–µ–º –º–µ—Ç–æ–¥ create_lobby"
echo "pattern = r'def create_lobby\(self, lobby_name.*?(?=\n    def )'"
echo "content = re.sub(pattern, new_method, content, flags=re.DOTALL)"
echo ""
echo "with open('dota2_real_lobby_bot_v2.py', 'w', encoding='utf-8') as f:"
echo "    f.write(content)"
echo ""
echo "print('‚úÖ –ú–µ—Ç–æ–¥ create_lobby –∑–∞–º–µ–Ω—ë–Ω!')"
echo "ENDPYTHON"


